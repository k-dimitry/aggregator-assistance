# Generated by Django 5.2.1 on 2025-05-15 13:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CategoryOrg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("slug", models.SlugField(max_length=100, verbose_name="URL")),
                (
                    "desc",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Описание"
                    ),
                ),
                (
                    "img",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=None,
                        verbose_name="Изображение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Город")),
            ],
            options={
                "verbose_name": "Город",
                "verbose_name_plural": "Города",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Область")),
            ],
            options={
                "verbose_name": "Область",
                "verbose_name_plural": "Области",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CityRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Округ")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.city",
                        verbose_name="Город",
                    ),
                ),
            ],
            options={
                "verbose_name": "Район",
                "verbose_name_plural": "Районы",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(max_length=100, verbose_name="Улица")),
                ("house", models.CharField(max_length=20, verbose_name="Дом")),
                (
                    "apartment",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Квартира"
                    ),
                ),
                (
                    "city_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="addresses",
                        to="organizations.cityregion",
                        verbose_name="Район города",
                    ),
                ),
            ],
            options={
                "verbose_name": "Адрес",
                "verbose_name_plural": "Адреса",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                ("slug", models.SlugField(unique=True, verbose_name="URL")),
                (
                    "org_type",
                    models.CharField(
                        choices=[
                            ("GOV", "Государственная"),
                            ("COMM", "Коммерческая"),
                            ("NPO", "НКО"),
                        ],
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="logos/",
                        verbose_name="Логотип",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отображать организацию в интерфейсе",
                        verbose_name="Активно",
                    ),
                ),
                (
                    "category_org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.categoryorg",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Организация",
                "verbose_name_plural": "Организации",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GeoLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField(verbose_name="Широта")),
                ("longitude", models.FloatField(verbose_name="Долгота")),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="geo_location",
                        to="organizations.organization",
                        verbose_name="Геолокация",
                    ),
                ),
            ],
            options={
                "verbose_name": "Геолокация",
                "verbose_name_plural": "Геолокации",
            },
        ),
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("phone", "Телефон"),
                            ("email", "Email"),
                            ("website", "Сайт"),
                        ],
                        max_length=20,
                        verbose_name="Тип контакта",
                    ),
                ),
                ("value", models.CharField(max_length=255, verbose_name="Значение")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Основной контакт"),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(default=0, verbose_name="Приоритет"),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="organizations.organization",
                        verbose_name="Организация",
                    ),
                ),
            ],
            options={
                "verbose_name": "Контакт",
                "verbose_name_plural": "Контакты",
                "ordering": ["-is_primary", "priority"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Созданно"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.address",
                        verbose_name="Адрес",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.organization",
                        verbose_name="Организация",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь организации с адресом",
                "verbose_name_plural": "Связи организаций с адресами",
                "unique_together": {("organization", "address")},
            },
        ),
        migrations.AddField(
            model_name="organization",
            name="address",
            field=models.ManyToManyField(
                blank=True,
                through="organizations.OrganizationAddress",
                to="organizations.address",
                verbose_name="Адрес",
            ),
        ),
        migrations.CreateModel(
            name="SocialMediaProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("vk", "VKontakte"),
                            ("fb", "Facebook"),
                            ("ig", "Instagram"),
                            ("tg", "Telegram"),
                            ("yt", "YouTube"),
                            ("oth", "Другое"),
                        ],
                        max_length=3,
                        verbose_name="Платформа",
                    ),
                ),
                ("profile_url", models.URLField(verbose_name="Ссылка на профиль")),
                (
                    "followers",
                    models.PositiveIntegerField(default=0, verbose_name="Подписчики"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Верифицирован"),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_profiles",
                        to="organizations.organization",
                        verbose_name="Организация",
                    ),
                ),
            ],
            options={
                "verbose_name": "Соцсеть",
                "verbose_name_plural": "Соцсети",
            },
        ),
        migrations.CreateModel(
            name="SubRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Муниципалитеты"),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.region",
                        verbose_name="Регион",
                    ),
                ),
            ],
            options={
                "verbose_name": "Муниципалитет",
                "verbose_name_plural": "Муниципалитеты",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="city",
            name="sub_region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="organizations.subregion",
                verbose_name="Муниципалитет",
            ),
        ),
        migrations.CreateModel(
            name="TargetGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Название группы"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Уникальное имя для URL (латиница, цифры и дефисы)",
                        max_length=150,
                        unique=True,
                        verbose_name="URL",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Характеристики и особенности группы",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Класс иконки",
                        max_length=50,
                        verbose_name="Иконка",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отображать группу в интерфейсе",
                        verbose_name="Активна",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Созданно"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Обновленно"),
                ),
            ],
            options={
                "verbose_name": "Аудитория",
                "verbose_name_plural": "Аудитории",
                "ordering": ["updated_at", "name"],
                "indexes": [
                    models.Index(
                        fields=["slug", "is_active"], name="organizatio_slug_00c843_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                ("slug", models.SlugField(max_length=100, verbose_name="URL")),
                ("desc", models.TextField(blank=True, verbose_name="Описание")),
                ("legal", models.CharField(max_length=500, verbose_name="Закон")),
                (
                    "url_legal",
                    models.SlugField(max_length=500, verbose_name="Ссылка на закон"),
                ),
                (
                    "requirement",
                    models.TextField(
                        blank=True, max_length=2000, verbose_name="Условия получения"
                    ),
                ),
                ("is_free", models.BooleanField(verbose_name="Бесплатно")),
                (
                    "is_online_available",
                    models.BooleanField(verbose_name="Доступно онлайн"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отображать меру в интерфейсе",
                        verbose_name="Активна",
                    ),
                ),
                (
                    "organization",
                    models.ManyToManyField(
                        help_text="Организации, которые оказывают меру",
                        related_name="services",
                        to="organizations.organization",
                        verbose_name="Организации",
                    ),
                ),
                (
                    "target_groups",
                    models.ManyToManyField(
                        help_text="Аудитории, для которых доступна эта мера",
                        related_name="services",
                        to="organizations.targetgroup",
                        verbose_name="Аудитории",
                    ),
                ),
            ],
            options={
                "verbose_name": "Мера поддержки",
                "verbose_name_plural": "Меры поддержки",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="Дата начала"),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата окончания"
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(default=True, verbose_name="Бесплатно"),
                ),
                (
                    "participation_conditions",
                    models.TextField(blank=True, verbose_name="Условия участия"),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programs",
                        to="organizations.organization",
                        verbose_name="Организация",
                    ),
                ),
                (
                    "target_groups",
                    models.ManyToManyField(
                        blank=True,
                        to="organizations.targetgroup",
                        verbose_name="Аудитория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Программа",
                "verbose_name_plural": "Программы",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="WorkingSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (0, "Понедельник"),
                            (1, "Вторник"),
                            (2, "Среда"),
                            (3, "Четверг"),
                            (4, "Пятница"),
                            (5, "Суббота"),
                            (6, "Воскресенье"),
                        ],
                        editable=False,
                        verbose_name="День недели",
                    ),
                ),
                (
                    "opens_at",
                    models.TimeField(blank=True, null=True, verbose_name="Открытие"),
                ),
                (
                    "closes_at",
                    models.TimeField(blank=True, null=True, verbose_name="Закрытие"),
                ),
                (
                    "is_round_the_clock",
                    models.BooleanField(default=False, verbose_name="Круглосуточно"),
                ),
                (
                    "is_closed",
                    models.BooleanField(default=False, verbose_name="Выходной"),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Комментарий"
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="working_schedules",
                        to="organizations.organization",
                        verbose_name="Организация",
                    ),
                ),
            ],
            options={
                "verbose_name": "График работы",
                "verbose_name_plural": "Графики работы",
                "ordering": ["day_of_week"],
                "unique_together": {("organization", "day_of_week")},
            },
        ),
    ]
